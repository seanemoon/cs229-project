scikit.image has good image support
scikit.feature


corners
edges
blobs
featyres (SIFT, daist)/bag

bag of features models

http://www.cs.unc.edu/~lazebnik/spring09/lec18_bag_of_features.pdf



http://www.codeproject.com/Articles/619039/Bag-of-Features-Descriptor-on-SIFT-Features-with-O



TODO:
1. Create pipeline to load images to cluster.
2. Preprocess images (currently NOOP)
3. Excract DAISY descriptors.
  - Read the paper
  - Understand the parameters
  - Discretize descriptors such that there is a constant number
4. phi(im) = hist(discretize(DAISY descriptors))
5. Run k-means on phi(im)
6. render images of same clusters


CREATING BAG OF FEATURE REPRESENTATION:
1. Obtain large corpus of images.
2. For each image, find keypoints and compute descriptors.
3. Collect all descriptors found this way.
4. Run K-Means on the collection, where K is desired vocabulary size.
5. Return clusters as vocabulary.


USING BAG OF FEATURE REPRESENTATION:
1. Obtain an image / video frame.
2. Create a histogram with buckets equal to the size of vocabulary.
2. Find keypoints and compute descriptors.
3. For each descriptor, find closest descriptor in vocabulary.
4. Increment entry in histogram corresponding to the closest descriptor in vocabulary.
  - Weight increment by inverse norm?
  - Split weight between close clusters?
5. Return histogram as your images feature representation.


CLUSTERING:
1. Obtain vocabulary.
2. Extract features from images.
3. Run k-means.
4. Awesome.
